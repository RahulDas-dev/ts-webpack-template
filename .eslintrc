{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "ignorePatterns": [
    "build/*",
    "node_modules/*"
  ],
  "rules": {
    "filenames/match-exported": "off",
    "semi": [
      "error",
      "never"
    ],
    "comma-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "quotes": [
      "error",
      "single"
    ],
    "no-eval": [
      "error"
    ],
    "no-var": [
      "error"
    ],
    "no-use-before-define": "off",
    "no-prototype-builtins": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "I"
        ]
      },
      {
        "selector": "typeLike",
        "format": [
          "StrictPascalCase"
        ],
        "prefix": [
          "T"
        ]
      },
      {
        "selector": "class",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "variableLike",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ],
        "leadingUnderscore": "allow",
        "custom": {
          "regex": "^(any|Number|number|String|string|Boolean|boolean|Undefined|undefined)$",
          "match": false
        }
      },
      {
        "selector": "enum",
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "E"
        ]
      },
      {
        "selector": "typeParameter",
        "format": [
          "PascalCase"
        ],
        "prefix": [
          "T"
        ]
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error"
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "accessibility": "no-public"
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "none"
      }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "off"
    ],
    "@typescript-eslint/no-empty-interface": [
      "off"
    ],
    "@typescript-eslint/explicit-module-boundary-types": [
      "off"
    ],
    "@typescript-eslint/no-this-alias": [
      "off"
    ],
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "@typescript-eslint/ban-types": [
      "off"
    ],
    "@typescript-eslint/no-var-requires": [
      "off"
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      {
        "ignoreRestArgs": true
      }
    ]
  }
}